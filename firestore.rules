rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isScorekeeper() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'scorekeeper';
    }
    
    function getTeamId() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId;
    }

    match /users/{userId} {
      // Users can read and write their own document
      allow read, write: if isOwner(userId);
    }

    match /teams/{teamId} {
      // Any authenticated user can view teams
      allow get, list: if isAuthenticated();
      // Only scorekeepers can create teams
      allow create: if isScorekeeper();
    }
    
    match /games/{gameId} {
      // A scorekeeper can create a game for their team
      allow create: if isScorekeeper() && request.resource.data.teamId == getTeamId();
      
      // A scorekeeper can read/update a game they created
      allow read, update: if isScorekeeper() && get(/databases/$(database)/documents/games/$(gameId)).data.createdBy == request.auth.uid;

      // A scorekeeper can query for games belonging to their team
      allow list: if isScorekeeper() && request.query.teamId == getTeamId();

      match /scores/{playerId} {
        allow read: if isAuthenticated();
        // Only the scorekeeper who created the game can write scores
        allow write: if isScorekeeper() && get(/databases/$(database)/documents/games/$(gameId)).data.createdBy == request.auth.uid;
      }
    }

    match /channels/global/messages/{messageId} {
        // Any authenticated user can read or send messages
        allow read, list: if isAuthenticated();
        allow create: if isAuthenticated() && request.resource.data.senderId == request.auth.uid;
    }
  }
}