rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write their own user document.
    match /users/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    // Teams can be read by any authenticated user for leaderboards.
    // Only the designated scorekeeper can create, update (save scores), or delete their team.
    match /teams/{teamId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.scorekeeperId == request.auth.uid;
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/teams/$(teamId)).data.scorekeeperId == request.auth.uid;
    }

    // Games can be read by any authenticated user.
    // Only a scorekeeper of an included team can create a game.
    // Note: This rule assumes teamId is a single string in the 'teams' array upon creation.
    match /games/{gameId} {
      allow read: if request.auth != null;
      // The user creating the game must be the scorekeeper for the team they are adding.
      allow create: if request.auth != null 
                    && request.resource.data.teams[0] != null
                    && get(/databases/$(database)/documents/teams/$(request.resource.data.teams[0])).data.scorekeeperId == request.auth.uid;
      allow update, delete: if false; // Game updates are handled through team scores for now.
    }

    // Chat can be read by anyone, but only created by authenticated users.
    match /chat/{msgId} {
      allow read: if true;
      allow create: if request.auth != null;
    }
  }
}
