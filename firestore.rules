rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isScorekeeper() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'scorekeeper';
    }

    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    match /teams/{teamId} {
      allow read: if isAuthenticated();
      allow create: if isScorekeeper() && request.resource.data.scorekeeperId == request.auth.uid;
      allow update, delete: if false; 
    }
    
    match /channels/{channelId}/messages/{msgId} {
        allow list, read: if isAuthenticated();
        allow create: if isAuthenticated() && request.resource.data.senderId == request.auth.uid;
        allow update, delete: if false;
    }

    match /games/{gameId} {
      allow read, update: if isAuthenticated();
      allow create: if isScorekeeper() && request.resource.data.createdBy == request.auth.uid;
      allow delete: if false;
    }

    match /games/{gameId}/scores/{playerId} {
      allow read: if isAuthenticated();
      allow create, update: if isScorekeeper() && 
                          get(/databases/$(database)/documents/games/$(gameId)).data.createdBy == request.auth.uid;
      allow delete: if false;
    }
  }
}
